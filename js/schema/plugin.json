{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "jupyter-fs",
  "description": "Settings for the jupyter-fs extension.",
  "jupyter.lab.setting-icon": "jfs:drive",
  "jupyter.lab.setting-icon-label": "jupyter-fs",
  "type": "object",
  "additionalProperties": false,

  "jupyter.lab.shortcuts": [
    {
      "command": "treefinder:copy",
      "keys": ["Ctrl C"],
      "selector": ".jp-tree-finder-sidebar"
    },
    {
      "command": "treefinder:cut",
      "keys": ["Ctrl X"],
      "selector": ".jp-tree-finder-sidebar"
    },
    {
      "command": "treefinder:paste",
      "keys": ["Ctrl V"],
      "selector": ".jp-tree-finder-sidebar"
    },
    {
      "command": "treefinder:rename",
      "keys": ["F2"],
      "selector": ".jp-tree-finder-sidebar"
    },
    {
      "command": "treefinder:delete",
      "keys": ["Delete"],
      "selector": ".jp-tree-finder-sidebar.jfs-mod-notRenaming"
    }
  ],

  "definitions": {
    "resource": {
      "description": "Specification for an fs resource",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "Display name of resource",
          "type": "string"
        },
        "url": {
          "description": "A url pointing to an fs resource, as per the PyFilesystem fsurl specification",
          "type": "string"
        },
        "preferred_dir": {
          "description": "Directory to be first opened (e.g., myDir/mySubdir)",
          "type": "string"
        },
        "auth": {
          "description": "Given any template {{VARS}} in the url, 'ask' (default) to open a dialog box asking for credentials, or `env` to pick up credentials from the server's environment variables",
          "type": "string",
          "enum": ["ask", "env", false],
          "default": "ask"
        },
        "defaultWritable": {
          "description": "Fallback for determining if resource is writeable. Used only if the underlying PyFilesystem does not provide this information (eg S3)",
          "type": "boolean",
          "default": true
        }
      }
    },
    "snippet": {
      "description": "Per entry snippets for how to use it, e.g. a snippet for how to open a file from a given resource",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "label": {
          "description": "The designator to show to users",
          "type": "string"
        },
        "caption": {
          "description": "An optional, longer description to show to users",
          "type": "string",
          "default": ""
        },
        "pattern": {
          "description": "A regular expression to match against the full URL of the entry, indicating if this snippet is valid for it",
          "type": "string",
          "default": ""
        },
        "template": {
          "description": "A template string to build up the snippet",
          "type": "string"
        }
      }
    }
  },

  "properties": {
    "resources": {
      "title": "Resources",
      "description": "The list of fs resource specifications",
      "items": { "$ref": "#/definitions/resource" },
      "type": "array",
      "default": []
    },
    "snippets": {
      "title": "Snippets",
      "description": "A list of usage snippets",
      "items": { "$ref": "#/definitions/snippet" },
      "type": "array",
      "default": [
        {
          "label": "Read CSV as dataframe",
          "caption": "Read the contents of this CSV file as a pandas DataFrame",
          "pattern": "\\.csv$",
          "template": "from fs import open_fs\nimport pandas\nwith open_fs(\"{{url}}\") as fs_instance:\n    df = pandas.read_csv(fs_instance.openbin(\"{{path}}\"))"
        },
        {
          "label": "Read contents",
          "caption": "Read the contents of this file with PyFilesystem",
          "pattern": "^(?!:osfs://)(.*/)?[^/]+$",
          "template": "from fs import open_fs\nwith open_fs(\"{{url}}\") as fs_instance:\n    contents = fs_instance.readbytes(\"{{path}}\")"
        },
        {
          "label": "Read contents (local)",
          "caption": "Read the contents of this file with PyFilesystem",
          "pattern": "^(?:osfs://)(.*/)?[^/]+$",
          "template": "import pathlib;\ncontents = pathlib.Path(\"{{resource}}/{{path}}\").read_bytes()"
        },
        {
          "label": "Read text",
          "caption": "Read the contents of this file as text with PyFilesystem",
          "pattern": "^(?!:osfs://)(.*/)?[^/]+$",
          "template": "from fs import open_fs\nwith open_fs(\"{{url}}\") as fs_instance:\n    contents = fs_instance.readtext(\"{{path}}\")"
        },
        {
          "label": "List directory contents",
          "caption": "List the entries of this directory with PyFilesystem",
          "pattern": "^.*/$",
          "template": "from fs import open_fs\nwith open_fs(\"{{url}}\") as fs_instance:\n    entries = fs_instance.listdir(\"{{path}}\")"
        }
      ]
    },
    "options": {
      "title": "Options",
      "description": "Global options for jupyter-fs",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cache": {
          "description": "If true, only recreate the actual resources when necessary (ie on initial load or changes to 'resources')",
          "type": "boolean",
          "default": true
        },
        "verbose": {
          "description": "If true, jupyter-fs will output helpful info messages to the console",
          "type": "boolean",
          "default": false
        }
      },
      "default": {}
    },
    "display_columns": {
      "title": "Display Columns",
      "description": "The list of columns that will be displayed",
      "type": "array",
      "items": {
        "type": "string",
        "enum": ["size", "last_modified", "writable", "mimetype"]
      },
      "default": ["size"],
      "maxItems": 4,
      "uniqueItems": true
    }
  }
}
